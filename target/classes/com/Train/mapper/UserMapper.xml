<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Train.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.Train.model.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, password, uname, grade
  </sql>
  <select id="selectUserByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  
  <select id="selectUserByUname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uname = #{uname,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUidByEmail" resultMap="BaseResultMap" parameterType="java.lang.String" >
  SELECT uid FROM userinfo WHERE email=#{email,jdbcType=VARCHAR}
  </select>
  <select id="selectUserByUidAndPassword" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER} and password = #{password,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Train.model.User" >
    insert into user (uid, password, uname, grade
      )
    values (#{uid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertUser" parameterType="com.Train.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="grade != null" >
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updatePasswordByUserId" parameterType="com.Train.model.User" >
    update user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Train.model.User" >
    update user
    set password = #{password,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>